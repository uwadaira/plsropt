% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VIP.R, R/baplot.R, R/extdat.R, R/matsgolay.R, R/ncompopt.R, R/plsrPlot.R, R/plsrauto.R, R/plsropt.R, R/rowpeak.R, R/selectivityRatio.R, R/snv.R
\docType{package}
\name{plsropt}
\alias{VIP}
\alias{baplot}
\alias{extdat}
\alias{matsgolay}
\alias{ncompopt}
\alias{plsrPlot}
\alias{plsrauto}
\alias{plsropt}
\alias{plsropt-package}
\alias{rowpeak}
\alias{selectivityRatio}
\alias{snv}
\title{Variable importance in projection for PLS regression}
\usage{
VIP(object)

baplot(y, yhat, sample = seq(1, length(y), by = 1), nsd = 3, ...)

extdat(x, start, end)

matsgolay(x, ...)

ncompopt(x)

plsrPlot(formula = NULL, data = NULL, testdata = NULL, yTrain = NULL,
  xTrain = NULL, xTest = NULL, yTest = NULL, yname = NULL,
  ncomp = "auto", maxcomp = 10, plot = TRUE, validation = "CV",
  segment.type = "interleaved", output = FALSE, dir = NULL,
  return.stats = FALSE, ...)

plsrauto(formula = NULL, data = NULL, testdata = NULL, yTrain = NULL,
  xTrain = NULL, xTest = NULL, yTest = NULL, yname = NULL,
  xrange = NULL, p = 2, n = 11, maxcomp = 10, plot = FALSE,
  output = FALSE, ...)

rowpeak(x)

selectivityRatio(mvr, ncomp = mvr$ncomp)

snv(x, range = c(1, ncol(x)))
}
\arguments{
\item{object}{a model object}

\item{y}{actual values}

\item{yhat}{predicted values}

\item{sample}{Name of samples}

\item{nsd}{a numeric value multiplied to the standard deviations. The product is used for determining the limits of agreement.}

\item{...}{additional arguments passed to the \code{\link{plot}}.}

\item{x}{an object of class \code{data.frame} or \code{matrix}.}

\item{start}{name of the 1st column of new data set to be extracted.}

\item{end}{name of the last column of new data set to be extracted.}

\item{formula}{a model formula (see below).}

\item{data}{an optional data frame with the data to fit the model form.}

\item{testdata}{data set for prediction.}

\item{ncomp}{the number of components (latent variables) to include in the model (see below).}

\item{maxcomp}{Maximum number of components (latent variables) to be used for cross-validation.}

\item{plot}{if \code{TRUE}, the four plots are drawn.}

\item{output}{if \code{TRUE}, the results are output as PDF and CSV files.}

\item{dir}{path to the directory where the results are output (default value is \code{"PLSR_result"}).}

\item{return.stats}{if \code{TRUE}, an object of class \code{data.frame} containing the statistics of PLS regression is returned.}

\item{xrange}{an object of class \code{list} which contains ranges of X-variables (see below).}

\item{p}{filter order for Savitzky-Golay smoothing (default value is 2).}

\item{n}{filter length (window size) for Savitzky-Golay smoothing (must be odd. default value is 11).}

\item{mvr}{an \code{mvr} object. The fitted model built by \code{\link{plsr}} function (see \code{\link{plsr}}).}

\item{range}{range of \code{x} used for calculating mean value and sd value. Specify as the column numbers.}

\item{x}{x m-by-n data of class \code{data.frame} or \code{matrix} to be filtered. m is the number of samples (observations) and n is the number of variables.}

\item{...}{additional arguments passed to the \code{\link{sgolayfilt}} in 'signal' package.}

\item{x}{RMSECV values calculated by the partial least squares regression}

\item{...}{additional arguments passed to the \code{\link{plsr}} in 'pls' package.}

\item{formula}{a model formula like \code{y ~ x}. See \code{\link{plsr}} and \code{\link{lm}} for a detailed description.}

\item{testdata}{data set for prediction.}

\item{output}{if \code{TRUE}, the results are output as PDF and CSV files in the `PLSR_auto' directory.}

\item{...}{additional arguments passed to \code{\link{plsrPlot}} and \code{\link{plsr}} in 'pls' package.}

\item{x}{an object of class \code{vector}}

\item{ncomp}{a positive integer. The number of components included in the model.}

\item{x}{\code{data.frame} or \code{matrix} with spectra in columns.}
}
\value{
VIP values

Bland-Altman plot

a new data set of class \code{data.frame} or \code{matrix}

an fitted matrix

the optimal number of components

If \code{return.stats = TRUE}, an object of class \code{data.frame} containing the statistics of PLS regression is returned.
Otherwise, an object of class \code{mvr} is returned (see \code{\link{plsr}}).

an object of class \code{data.frame} containing the statistics of PLS regressions under the different combinations of X-variable range and preprocessing method is returned.

an object of class \code{list} containing the number of rows which have high and low peak values

selectivity ratio for each variable included in the model

spectral data applied the standard normal variate
}
\description{
The function \code{matsgolay} applys Savitzky-Golay smoothing, 1st derivative or 2nd derivative to
an object of class \code{matrix} by using \code{\link{sgolayfilt}} in \code{signal} package.

The function \code{ncompopt} determines the optimal number of components to include the model.

The function \code{plsrPlot} performs the partial least squares (PLS) regression by using the function \code{\link{plsr}} in 'pls' package and draws four kinds of plots
(cross-validation, regression vector, variable importance [selectivity ratio and variable importance in projection], actual vs. predicted value) at once.

The function \code{plsrauto} performs the partial least squares (PLS) regressions under different combinations of X-variable range and preprocessing method automatically.

plsropt package can be used to optimize spectral preprocessing method for partial least squares regression.

The function \code{snv} applys the standard normal variate to the spectral data.
}
\details{
If \code{ncomp = "auto"}, the number of components with the minimum RMSECV is selected.
If the selected n-th component with the minimum RMSECV does not improve the RMSECV by at least 2 percent, then (n-1)th compoment is selected and so forth.

The \code{formula} argument should be a symbolic formula of the form \code{response ~ terms},
where \code{response} is the name of the response vector
and \code{terms} is the name of the predictor matrix, e.g., water ~ FTIR.
See \code{\link{plsr}} and \code{\link{lm}} for a detailed description.

If \code{ncomp = "auto"}, the optimum number of components is automatically selected (see \code{\link{ncompopt}}).

Three steps of preprocessing are automatically applied to the X-variable data set.
First, standard normal variate (SNV) is applied or not.
Second, Savitzky-Golay smoothing, 1st derivative or 2nd derivative is applied or not, respectively.
Finally, auto-scaling is applied or not.
Total 16 (2*4*2) kinds of preprocessing methods are applied and the results of PLS regressions are returned as an object of class \code{data.frame}.
If \code{output == TRUE}, each PLS regression result is output as PDF and CSV files in one directory.
}
\examples{
data(yarn)
yarn.pls <- plsr(density ~ NIR, 6, data = yarn, method = "oscorespls", validation = "CV")
VIP(yarn.pls)

data(peach)
peach.pls <- plsr(Brix ~ NIR, ncomp = 5, data = peach, validation = "CV")
yhat <- peach.pls$fitted.values[, , 5]
baplot(peach$Brix, yhat, sample = rownames(peach), nsd = 3)

data(peach)
x <- extdat(peach$NIR, start = 700, end = 1050)

data(peach)
nir.1d <- matsgolay(peach$NIR, p = 2, n = 11, m = 1)

data(peach)
peach.pls <- plsr(Brix ~ NIR, ncomp = 15, data = peach, validation = "CV")
ncompopt(RMSEP(peach.pls)$val[2,,])

data(peach)
datTrain <- peach[1:50, ]
datTest  <- peach[51:74, ]
result <- plsrPlot(Brix ~ NIR, data = datTrain, testdata = datTest)

# alternative way
result <- plsrPlot(yTrain = datTrain$Brix, xTrain = datTrain$NIR, yTest=datTest$Brix, xTest=datTest$NIR)

data(peach)
datTrain <- peach[1:50, ]
datTest  <- peach[51:74, ]
result.all <- plsrauto(Brix ~ NIR, data = datTrain, testdata = datTest, xrange = list(c(700, 1098), c(1100, 2498)))

data(peach)
peach.pls <- plsr(Brix ~ NIR, ncomp = 15, data = peach, validation = "CV")
plot(RMSEP(peach.pls))
peak <- rowpeak(RMSEP(peach.pls)$val[2,,])
peak$low
RMSEP(peach.pls)$comps[peak$low]

data(peach)
peach.pls <- plsr(Brix ~ NIR, ncomp = 5, data = peach, validation = "CV")
selectivityRatio(peach.pls)

data(peach)
nir.snv <- snv(peach$NIR)

}
\author{
BjÃ¸rn-Helge Mevik (bhx6@mevik.net)

Yasuhiro Uwadaira (supported by Vipavee Trivittayasil)
}
\seealso{
\code{\link{sgolayfilt}}

\code{\link{rowpeak}}

\code{\link{ncompopt}}, \code{\link{plsr}}, \code{\link{lm}}

\code{\link{plsrPlot}}, \code{\link{plsr}}, \code{\link{lm}}
}

