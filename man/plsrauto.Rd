% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plsrauto.R
\name{plsrauto}
\alias{plsrauto}
\title{PLS regressions under different combinations of X-variable range and preprocessing method}
\usage{
plsrauto(formula = NULL, data = NULL, testdata = NULL, yTrain = NULL,
  xTrain = NULL, xTest = NULL, yTest = NULL, yname = NULL,
  xrange = NULL, p = 2, n = 11, maxcomp = 10, plot = FALSE,
  output = FALSE, ...)
}
\arguments{
\item{formula}{a model formula like \code{y ~ x}. See \code{\link{plsr}} and \code{\link{lm}} for a detailed description.}

\item{testdata}{data set for prediction.}

\item{xrange}{an object of class \code{list} which contains ranges of X-variables (see below).}

\item{p}{filter order for Savitzky-Golay smoothing (default value is 2).}

\item{n}{filter length (window size) for Savitzky-Golay smoothing (must be odd. default value is 11).}

\item{output}{if \code{TRUE}, the results are output as PDF and CSV files in the `PLSR_auto' directory.}

\item{...}{additional arguments passed to \code{\link{plsrPlot}} and \code{\link{plsr}} in 'pls' package.}
}
\value{
an object of class \code{data.frame} containing the statistics of PLS regressions under the different combinations of X-variable range and preprocessing method is returned.
}
\description{
The function \code{plsrauto} performs the partial least squares (PLS) regressions under different combinations of X-variable range and preprocessing method automatically.
}
\details{
Three steps of preprocessing are automatically applied to the X-variable data set.
First, standard normal variate (SNV) is applied or not.
Second, Savitzky-Golay smoothing, 1st derivative or 2nd derivative is applied or not, respectively.
Finally, auto-scaling is applied or not.
Total 16 (2*4*2) kinds of preprocessing methods are applied and the results of PLS regressions are returned as an object of class \code{data.frame}.
If \code{output == TRUE}, each PLS regression result is output as PDF and CSV files in one directory.
}
\examples{
data(peach)
datTrain <- peach[1:50, ]
datTest  <- peach[51:74, ]
result.all <- plsrauto(Brix ~ NIR, data = datTrain, testdata = datTest, xrange = list(c(700, 1098), c(1100, 2498)))

}
\seealso{
\code{\link{plsrPlot}}, \code{\link{plsr}}, \code{\link{lm}}
}

